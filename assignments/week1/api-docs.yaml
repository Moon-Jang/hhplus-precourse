openapi: 3.0.3
info:
  title: Posts API
  description: 게시글 CRUD 기능을 제공하는 API (공통 응답 구조 적용)
  version: 1.0.0

servers:
  - url: http://localhost:8080

paths:
  /posts:
    get:
      summary: 게시글 목록 조회
      description: 게시글의 제목, 작성자명, 작성 내용, 작성 날짜를 조회하며, 작성 날짜 기준 내림차순 정렬
      operationId: getAllPosts
      responses:
        '200':
          description: 게시글 목록 조회 성공
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/SuccessResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/GetPostListResponse'
        '400':
          description: 잘못된 요청
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: 서버 에러
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    post:
      summary: 게시글 작성
      description: 제목, 작성자명, 비밀번호, 작성 내용을 저장하고, 저장된 게시글을 반환
      operationId: createPost
      requestBody:
        required: true
        description: 생성할 게시글 데이터
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePostRequest'
      responses:
        '200':
          description: 게시글 작성 성공
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/SuccessResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/PostResponse'
        '400':
          description: 잘못된 요청
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: 서버 에러
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /posts/{id}:
    get:
      summary: 게시글 조회
      description: 선택한 게시글의 제목, 작성자명, 작성 날짜, 작성 내용을 조회
      operationId: getPostById
      parameters:
        - name: id
          in: path
          description: 조회할 게시글의 ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 게시글 조회 성공
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/SuccessResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/PostResponse'
        '400':
          description: 잘못된 요청
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: 서버 에러
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    put:
      summary: 게시글 수정
      description: 수정할 데이터(제목, 작성자명, 작성 내용)와 비밀번호를 함께 전송. 비밀번호가 일치하면 해당 필드들을 수정한 뒤 수정된 게시글 반환
      operationId: updatePost
      parameters:
        - name: id
          in: path
          description: 수정할 게시글의 ID
          required: true
          schema:
            type: integer
            format: int64
        - name: password
          in: query
          description: 게시글 삭제 시 필요한 비밀번호
          required: true
          schema:
            type: string
      requestBody:
        required: true
        description: 수정할 게시글 데이터 및 비밀번호
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePostRequest'
      responses:
        '200':
          description: 게시글 수정 성공
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/SuccessResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/PostResponse'
        '400':
          description: 잘못된 요청
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: 서버 에러
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    delete:
      summary: 게시글 삭제
      description: 비밀번호를 쿼리 파라미터로 전달하여 서버에서 일치 여부를 확인한 뒤, 게시글을 삭제
      operationId: deletePost
      parameters:
        - name: id
          in: path
          description: 삭제할 게시글의 ID
          required: true
          schema:
            type: integer
            format: int64
        - name: password
          in: query
          description: 게시글 삭제 시 필요한 비밀번호
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 게시글 삭제 성공
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/SuccessResponse'
                  - type: object
                    properties:
                      data:
                        type: object
                        example:
                          message: "게시글이 성공적으로 삭제되었습니다."
        '400':
          description: 잘못된 요청
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: 서버 에러
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    SuccessResponse:
      type: object
      properties:
        status:
          type: string
          example: SUCCESS
          description: "요청 결과 상태 (예: SUCCESS, FAIL, ERROR)"
        message:
          type: string
          example: 요청이 성공하였습니다.
          description: 요청 처리 상세 메시지
        data:
          type: object
          nullable: true
          description: 실제 응답 데이터 (엔드포인트마다 형식이 달라짐)

    ErrorResponse:
      type: object
      properties:
        status:
          type: string
          example: FAIL
          description: "요청 결과 상태 (예: SUCCESS, FAIL, ERROR)"
        message:
          type: string
          example: 요청에 실패하였습니다.
          description: 요청 처리 상세 메시지
        data:
          type: null


    GetPostListResponse:
      type: object
      properties:
        title:
          type: string
          maxLength: 100
          description: 게시글 제목
        author:
          type: string
          maxLength: 50
          description: 작성자 이름
        content:
          type: string
          description: 게시글 내용
        createdAt:
          type: string
          pattern: "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$"
          example: "2025-02-16T12:34:56"
          readOnly: true
          description: 게시글 생성 시각 (yyyy-MM-ddThh:mm:ss 포맷)

    PostResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
          description: 게시글 고유 ID
        title:
          type: string
          maxLength: 100
          description: 게시글 제목
        author:
          type: string
          maxLength: 50
          description: 작성자 이름
        content:
          type: string
          description: 게시글 내용
        createdAt:
          type: string
          pattern: "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$"
          example: "2025-02-16T12:34:56"
          readOnly: true
          description: 게시글 생성 시각 (yyyy-MM-ddThh:mm:ss 포맷)

    CreatePostRequest:
      type: object
      properties:
        title:
          type: string
          maxLength: 100
          description: 게시글 제목
        author:
          type: string
          maxLength: 50
          description: 작성자 이름
        password:
          type: string
          maxLength: 50
          writeOnly: true
          description: 게시글 수정/삭제 시 검증용 비밀번호
        content:
          type: string
          description: 게시글 내용
      required:
        - title
        - author
        - password
        - content

    UpdatePostRequest:
      type: object
      properties:
        title:
          type: string
          maxLength: 100
          description: 게시글 제목
        author:
          type: string
          maxLength: 50
          description: 작성자 이름
        content:
          type: string
          description: 게시글 내용
      required:
        - title
        - author
        - content